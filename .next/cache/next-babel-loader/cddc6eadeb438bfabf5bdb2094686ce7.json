{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-projects\\\\shoe-store\\\\pages\\\\orders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withAuth from '../lib/withAuth';\nimport withLayout from '../lib/withLayout';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst FETCH_ORDER = gql`\n\tquery orders($where: JSON) {\n\t\torders(where: $where) {\n\t\t\tproducts {\n\t\t\t\tname\n\t\t\t\tprice\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Orders = ({\n  user\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_ORDER, {\n    variables: {\n      $type: {\n        amount: 7997\n      }\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 22\n    }\n  }, \"Loading ...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, data.orders.map(order => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, order.id), order.products.map(product => {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 10\n        }\n      }, product.name), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 10\n        }\n      }, product.price));\n    }));\n  }));\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Address \", data.orders[0].shippingAddress, \"!\");\n};\n\nexport default withAuth(withLayout(Orders), {\n  loginRequired: true\n});","map":{"version":3,"sources":["C:/my-projects/shoe-store/pages/orders.js"],"names":["withAuth","withLayout","useQuery","gql","FETCH_ORDER","Orders","user","loading","error","data","variables","$type","amount","orders","map","order","id","products","product","name","price","shippingAddress","loginRequired"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;;CAAxB;;AAWA,MAAME,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,WAAD,EAAc;AACtDM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAAT;AAD2C,GAAd,CAAzC;AAGA,MAAIL,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEE,IAAI,CAACI,MAAL,CAAYC,GAAZ,CAAiBC,KAAD,IAAW;AAC3B,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACC,EAAX,CADD,EAEED,KAAK,CAACE,QAAN,CAAeH,GAAf,CAAoBI,OAAD,IAAa;AAChC,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,OAAO,CAACC,IAAZ,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,OAAO,CAACE,KAAZ,CAFD,CADD;AAMA,KAPA,CAFF,CADD;AAaA,GAdA,CADF,CADD;AAmBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaX,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeQ,eAA5B,MAAP;AACA,CAzBD;;AA2BA,eAAerB,QAAQ,CAACC,UAAU,CAACI,MAAD,CAAX,EAAqB;AAAEiB,EAAAA,aAAa,EAAE;AAAjB,CAArB,CAAvB","sourcesContent":["import withAuth from '../lib/withAuth';\r\nimport withLayout from '../lib/withLayout';\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\n\r\nconst FETCH_ORDER = gql`\r\n\tquery orders($where: JSON) {\r\n\t\torders(where: $where) {\r\n\t\t\tproducts {\r\n\t\t\t\tname\r\n\t\t\t\tprice\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Orders = ({ user }) => {\r\n\tconst { loading, error, data } = useQuery(FETCH_ORDER, {\r\n\t\tvariables: { $type: { amount: 7997 } },\r\n\t});\r\n\tif (loading) return <p>Loading ...</p>;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{data.orders.map((order) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4>{order.id}</h4>\r\n\t\t\t\t\t\t{order.products.map((product) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<p>{product.name}</p>\r\n\t\t\t\t\t\t\t\t\t<p>{product.price}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n\treturn <h1>Address {data.orders[0].shippingAddress}!</h1>;\r\n};\r\n\r\nexport default withAuth(withLayout(Orders), { loginRequired: true });\r\n"]},"metadata":{},"sourceType":"module"}