{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-projects\\\\shoe-store\\\\components\\\\ProductsList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nconst apiUrl = 'http://localhost:1337/products'; // posts will be populated at build time by getStaticProps()\n\nfunction ProductsList({\n  products\n}) {\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, products.map(product => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, product.name)));\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch(apiUrl);\n  const products = await res.json();\n  console.log(products); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      products\n    }\n  };\n}\nexport default ProductsList;","map":{"version":3,"sources":["C:/my-projects/shoe-store/components/ProductsList.js"],"names":["apiUrl","ProductsList","products","map","product","name","getStaticProps","res","fetch","json","console","log","props"],"mappings":";;;AAAA,MAAMA,MAAM,GAAG,gCAAf,C,CAEA;;AACA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACnC,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,QAAQ,CAACC,GAAT,CAAcC,OAAD,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACC,IAAb,CADA,CADF,CADD;AAOA,C,CAED;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACtC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACR,MAAD,CAAvB;AACA,QAAME,QAAQ,GAAG,MAAMK,GAAG,CAACE,IAAJ,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ,EALsC,CAMtC;AACA;;AACA,SAAO;AACNU,IAAAA,KAAK,EAAE;AACNV,MAAAA;AADM;AADD,GAAP;AAKA;AAED,eAAeD,YAAf","sourcesContent":["const apiUrl = 'http://localhost:1337/products';\r\n\r\n// posts will be populated at build time by getStaticProps()\r\nfunction ProductsList({ products }) {\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{products.map((product) => (\r\n\t\t\t\t<li>{product.name}</li>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries. See the \"Technical details\" section.\r\nexport async function getStaticProps() {\r\n\t// Call an external API endpoint to get posts.\r\n\t// You can use any data fetching library\r\n\tconst res = await fetch(apiUrl);\r\n\tconst products = await res.json();\r\n\tconsole.log(products);\r\n\t// By returning { props: posts }, the Blog component\r\n\t// will receive `posts` as a prop at build time\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tproducts,\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport default ProductsList;\r\n"]},"metadata":{},"sourceType":"module"}