{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-projects\\\\shoe-store\\\\pages\\\\orders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withAuth from '../lib/withAuth';\nimport withLayout from '../lib/withLayout';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst FETCH_ORDER = gql`\n\tquery orders($where: JSON) {\n\t\torders(where: $where) {\n\t\t\tcreatedAt\n\t\t\tid\n\t\t\tproducts {\n\t\t\t\tname\n\t\t\t\tprice\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Orders = ({\n  user\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_ORDER, {\n    variables: {\n      $type: {\n        user: {\n          id: user.id\n        }\n      }\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }\n  }, \"Loading ...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, \"Your orders\"), data.orders.map((order, i) => {\n    return __jsx(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, \"Order Id : \", order.id), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, order.createdAt), order.products.map((product, i) => {\n      return __jsx(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, __jsx(\"img\", {\n        src: product.displayImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 10\n        }\n      }), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 10\n        }\n      }, product.name), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 10\n        }\n      }, product.price));\n    }));\n  }));\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Address \", data.orders[0].shippingAddress, \"!\");\n};\n\nexport default withAuth(withLayout(Orders), {\n  loginRequired: true\n});","map":{"version":3,"sources":["C:/my-projects/shoe-store/pages/orders.js"],"names":["withAuth","withLayout","useQuery","gql","FETCH_ORDER","Orders","user","loading","error","data","variables","$type","id","orders","map","order","i","createdAt","products","product","displayImage","name","price","shippingAddress","loginRequired"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;;;;CAAxB;;AAaA,MAAME,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,WAAD,EAAc;AACtDM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAEL,QAAAA,IAAI,EAAE;AAAEM,UAAAA,EAAE,EAAEN,IAAI,CAACM;AAAX;AAAR;AAAT;AAD2C,GAAd,CAAzC;AAGA,MAAIL,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEEE,IAAI,CAACI,MAAL,CAAYC,GAAZ,CAAgB,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC9B,WACC;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgBD,KAAK,CAACH,EAAtB,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIG,KAAK,CAACE,SAAV,CAFD,EAGEF,KAAK,CAACG,QAAN,CAAeJ,GAAf,CAAmB,CAACK,OAAD,EAAUH,CAAV,KAAgB;AACnC,aACC;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,GAAG,EAAEG,OAAO,CAACC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,OAAO,CAACE,IAAZ,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIF,OAAO,CAACG,KAAZ,CAHD,CADD;AAOA,KARA,CAHF,CADD;AAeA,GAhBA,CAFF,CADD;AAsBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAab,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeU,eAA5B,MAAP;AACA,CA5BD;;AA8BA,eAAevB,QAAQ,CAACC,UAAU,CAACI,MAAD,CAAX,EAAqB;AAAEmB,EAAAA,aAAa,EAAE;AAAjB,CAArB,CAAvB","sourcesContent":["import withAuth from '../lib/withAuth';\r\nimport withLayout from '../lib/withLayout';\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\n\r\nconst FETCH_ORDER = gql`\r\n\tquery orders($where: JSON) {\r\n\t\torders(where: $where) {\r\n\t\t\tcreatedAt\r\n\t\t\tid\r\n\t\t\tproducts {\r\n\t\t\t\tname\r\n\t\t\t\tprice\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Orders = ({ user }) => {\r\n\tconst { loading, error, data } = useQuery(FETCH_ORDER, {\r\n\t\tvariables: { $type: { user: { id: user.id } } },\r\n\t});\r\n\tif (loading) return <p>Loading ...</p>;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>Your orders</h4>\r\n\t\t\t{data.orders.map((order, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t<h4>Order Id : {order.id}</h4>\r\n\t\t\t\t\t\t<p>{order.createdAt}</p>\r\n\t\t\t\t\t\t{order.products.map((product, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t\t\t<img src={product.displayImage} />\r\n\t\t\t\t\t\t\t\t\t<p>{product.name}</p>\r\n\t\t\t\t\t\t\t\t\t<p>{product.price}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n\treturn <h1>Address {data.orders[0].shippingAddress}!</h1>;\r\n};\r\n\r\nexport default withAuth(withLayout(Orders), { loginRequired: true });\r\n"]},"metadata":{},"sourceType":"module"}