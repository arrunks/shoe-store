{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\my-projects\\\\shoe-store\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery {\\n\\t\\tproducts {\\n\\t\\t\\tname\\n\\t\\t\\tdescription\\n\\t\\t\\tprice\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport ProductsList from '../components/ProductsList';\nimport cookies from 'next-cookies';\nimport withLayout from '../lib/withLayout';\nimport withAuth from '../lib/withAuth';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nvar QUERY = gql(_templateObject());\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var products = _ref.products;\n\n  var _useQuery = useQuery(QUERY),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (loading || !data) {\n    return __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }\n    }, \"loading...\");\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, \"List\"));\n}; // Index.getInitialProps = async (ctx) => {\n// \tconst res = await fetch('http://localhost:1337/products');\n// \tconst products = await res.json();\n// \treturn {\n// \t\tproducts, // will be passed to the page component as props\n// \t};\n// };\n\n\n_s(Index, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Index;\nexport default _c3 = withAuth(_c2 = withLayout(Index), {\n  loginRequired: false\n});\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"%default%$withAuth\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/my-projects/shoe-store/pages/index.js"],"names":["ProductsList","cookies","withLayout","withAuth","useQuery","gql","QUERY","Index","products","loading","data","loginRequired"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,KAAK,GAAGD,GAAH,mBAAX;;AAUA,IAAME,KAAK,GAAG,SAARA,KAAQ,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACLJ,QAAQ,CAACE,KAAD,CADH;AAAA,MACvBG,OADuB,aACvBA,OADuB;AAAA,MACdC,IADc,aACdA,IADc;;AAG/B,MAAID,OAAO,IAAI,CAACC,IAAhB,EAAsB;AACrB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACA;;AACD,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADD;AAKA,CAXD,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAnBMH,K;UACqBH,Q;;;KADrBG,K;AAqBN,qBAAeJ,QAAQ,OAACD,UAAU,CAACK,KAAD,CAAX,EAAoB;AAAEI,EAAAA,aAAa,EAAE;AAAjB,CAApB,CAAvB","sourcesContent":["import ProductsList from '../components/ProductsList';\r\nimport cookies from 'next-cookies';\r\nimport withLayout from '../lib/withLayout';\r\nimport withAuth from '../lib/withAuth';\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\n\r\nconst QUERY = gql`\r\n\tquery {\r\n\t\tproducts {\r\n\t\t\tname\r\n\t\t\tdescription\r\n\t\t\tprice\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Index = ({ products }) => {\r\n\tconst { loading, data } = useQuery(QUERY);\r\n\r\n\tif (loading || !data) {\r\n\t\treturn <h1>loading...</h1>;\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>List</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// Index.getInitialProps = async (ctx) => {\r\n// \tconst res = await fetch('http://localhost:1337/products');\r\n// \tconst products = await res.json();\r\n// \treturn {\r\n// \t\tproducts, // will be passed to the page component as props\r\n// \t};\r\n// };\r\n\r\nexport default withAuth(withLayout(Index), { loginRequired: false });\r\n"]},"metadata":{},"sourceType":"module"}