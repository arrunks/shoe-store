{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery orders($where: JSON) {\\n\\t\\torders(where: $where) {\\n\\t\\t\\tcreatedAt\\n\\t\\t\\tid\\n\\t\\t\\tproducts {\\n\\t\\t\\t\\tname\\n\\t\\t\\t\\tprice\\n\\t\\t\\t\\tdisplayImage\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport withAuth from '../lib/withAuth';\nimport withLayout from '../lib/withLayout';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Row, Col } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nvar FETCH_ORDER = gql(_templateObject());\n\nvar Orders = function Orders(_ref) {\n  var user = _ref.user;\n\n  var _useQuery = useQuery(FETCH_ORDER, {\n    variables: {\n      $type: {\n        user: {\n          id: user.id\n        }\n      }\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", null, \"Loading ...\");\n  return __jsx(\"div\", {\n    className: \"orders-container\"\n  }, __jsx(\"h4\", null, \"Your orders\"), !data && __jsx(\"p\", null, \"No Orders found.\"), data && __jsx(\"div\", null, data.orders.map(function (order, i) {\n    return __jsx(\"div\", {\n      key: i\n    }, __jsx(\"h4\", null, i + 1, \". Order Id : \", order.id), __jsx(\"p\", null, \"Placed Successfully At: \", order.createdAt), __jsx(\"h4\", null, \"Contains Items:\"), order.products.map(function (product, i) {\n      return __jsx(Row, {\n        className: \"mb-2\",\n        key: i\n      }, __jsx(Col, null, __jsx(Card, {\n        className: \"p-2\"\n      }, __jsx(Row, null, __jsx(Col, {\n        className: 'align-self-center'\n      }, __jsx(Row, null, __jsx(Col, null, __jsx(CardTitle, {\n        className: \"pl-1\"\n      }, i + 1, \". \", product.name))), __jsx(Row, null, __jsx(Col, null, __jsx(CardSubtitle, {\n        className: \"pl-1\"\n      }, \"Rs. \", product.price)))), __jsx(Col, {\n        md: 3\n      }, __jsx(\"div\", {\n        className: \"product-image\"\n      }, __jsx(CardImg, {\n        top: true,\n        width: \"100%\",\n        height: \"100%\",\n        src: \"\".concat(product.displayImage),\n        alt: \"Card image cap\"\n      })))))));\n    }));\n  })));\n};\n\nexport default withAuth(withLayout(Orders), {\n  loginRequired: true\n});","map":null,"metadata":{},"sourceType":"module"}