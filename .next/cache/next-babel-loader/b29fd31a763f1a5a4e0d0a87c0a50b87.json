{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\nimport cookies from 'next-cookies';\nexport default function createApolloClient(initialState, ctx) {\n  // The `ctx` (NextPageContext) will only be present on the server.\n  // use it to extract auth headers (ctx.req) or similar.\n  const {\n    jwt\n  } = cookies(ctx);\n  console.log(ctx.req);\n  return new ApolloClient({\n    ssrMode: Boolean(ctx),\n    link: new HttpLink({\n      uri: 'http://localhost:1337/graphql',\n      // Server URL (must be absolute)\n      credentials: 'same-origin',\n      // Additional fetch() options like `credentials` or `headers`\n      fetch,\n      headers: {\n        authorization: jwt ? `Bearer ${jwt}` : ''\n      }\n    }),\n    cache: new InMemoryCache().restore(initialState)\n  });\n}","map":{"version":3,"sources":["C:/my-projects/shoe-store/apolloClient.js"],"names":["ApolloClient","InMemoryCache","HttpLink","fetch","cookies","createApolloClient","initialState","ctx","jwt","console","log","req","ssrMode","Boolean","link","uri","credentials","headers","authorization","cache","restore"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,eAAe,SAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,GAA1C,EAA+C;AAC7D;AACA;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAUJ,OAAO,CAACG,GAAD,CAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,GAAhB;AACA,SAAO,IAAIX,YAAJ,CAAiB;AACvBY,IAAAA,OAAO,EAAEC,OAAO,CAACN,GAAD,CADO;AAEvBO,IAAAA,IAAI,EAAE,IAAIZ,QAAJ,CAAa;AAClBa,MAAAA,GAAG,EAAE,+BADa;AACoB;AACtCC,MAAAA,WAAW,EAAE,aAFK;AAEU;AAC5Bb,MAAAA,KAHkB;AAIlBc,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAEV,GAAG,GAAI,UAASA,GAAI,EAAjB,GAAqB;AAD/B;AAJS,KAAb,CAFiB;AAUvBW,IAAAA,KAAK,EAAE,IAAIlB,aAAJ,GAAoBmB,OAApB,CAA4Bd,YAA5B;AAVgB,GAAjB,CAAP;AAYA","sourcesContent":["import { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport cookies from 'next-cookies';\r\n\r\nexport default function createApolloClient(initialState, ctx) {\r\n\t// The `ctx` (NextPageContext) will only be present on the server.\r\n\t// use it to extract auth headers (ctx.req) or similar.\r\n\r\n\tconst { jwt } = cookies(ctx);\r\n\tconsole.log(ctx.req);\r\n\treturn new ApolloClient({\r\n\t\tssrMode: Boolean(ctx),\r\n\t\tlink: new HttpLink({\r\n\t\t\turi: 'http://localhost:1337/graphql', // Server URL (must be absolute)\r\n\t\t\tcredentials: 'same-origin', // Additional fetch() options like `credentials` or `headers`\r\n\t\t\tfetch,\r\n\t\t\theaders: {\r\n\t\t\t\tauthorization: jwt ? `Bearer ${jwt}` : '',\r\n\t\t\t},\r\n\t\t}),\r\n\t\tcache: new InMemoryCache().restore(initialState),\r\n\t});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}