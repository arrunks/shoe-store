{"ast":null,"code":"/* global fetch */\nimport { all, call, delay, put, take, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch';\nimport { actionTypes, loadUser, loadProducts } from './actions';\nes6promise.polyfill();\n\nfunction* loadProductSaga() {\n  try {\n    const res = yield fetch('http://localhost:1337/products');\n    const data = yield res.json();\n    yield put(loadProducts(data));\n  } catch (err) {//yield put(failure(err))\n  }\n}\n\nfunction* loadUserSaga() {\n  try {\n    const res = yield fetch('http://localhost:1337/users/me/');\n    const data = yield res.json();\n    yield put(loadUser(data));\n  } catch (err) {//yield put(failure(err))\n  }\n}\n\nfunction* rootSaga() {\n  yield all([takeLatest(actionTypes.LOAD_PRODUCTS, loadProductSaga)]); //takeLatest(actionTypes.LOAD_USER, loadUserSaga),\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["C:/my-projects/shoe-store/redux/saga.js"],"names":["all","call","delay","put","take","takeLatest","es6promise","actionTypes","loadUser","loadProducts","polyfill","loadProductSaga","res","fetch","data","json","err","loadUserSaga","rootSaga","LOAD_PRODUCTS"],"mappings":"AAAA;AAEA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,oBAAP;AAEA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,YAAhC,QAAoD,WAApD;AAEAH,UAAU,CAACI,QAAX;;AAEA,UAAUC,eAAV,GAA4B;AAC3B,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,UAAMZ,GAAG,CAACM,YAAY,CAACK,IAAD,CAAb,CAAT;AACA,GAJD,CAIE,OAAOE,GAAP,EAAY,CACb;AACA;AACD;;AAED,UAAUC,YAAV,GAAyB;AACxB,MAAI;AACH,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,UAAMZ,GAAG,CAACK,QAAQ,CAACM,IAAD,CAAT,CAAT;AACA,GAJD,CAIE,OAAOE,GAAP,EAAY,CACb;AACA;AACD;;AAED,UAAUE,QAAV,GAAqB;AACpB,QAAMlB,GAAG,CAAC,CAACK,UAAU,CAACE,WAAW,CAACY,aAAb,EAA4BR,eAA5B,CAAX,CAAD,CAAT,CADoB,CAEpB;AACA;;AAED,eAAeO,QAAf","sourcesContent":["/* global fetch */\r\n\r\nimport { all, call, delay, put, take, takeLatest } from 'redux-saga/effects';\r\nimport es6promise from 'es6-promise';\r\nimport 'isomorphic-unfetch';\r\n\r\nimport { actionTypes, loadUser, loadProducts } from './actions';\r\n\r\nes6promise.polyfill();\r\n\r\nfunction* loadProductSaga() {\r\n\ttry {\r\n\t\tconst res = yield fetch('http://localhost:1337/products');\r\n\t\tconst data = yield res.json();\r\n\t\tyield put(loadProducts(data));\r\n\t} catch (err) {\r\n\t\t//yield put(failure(err))\r\n\t}\r\n}\r\n\r\nfunction* loadUserSaga() {\r\n\ttry {\r\n\t\tconst res = yield fetch('http://localhost:1337/users/me/');\r\n\t\tconst data = yield res.json();\r\n\t\tyield put(loadUser(data));\r\n\t} catch (err) {\r\n\t\t//yield put(failure(err))\r\n\t}\r\n}\r\n\r\nfunction* rootSaga() {\r\n\tyield all([takeLatest(actionTypes.LOAD_PRODUCTS, loadProductSaga)]);\r\n\t//takeLatest(actionTypes.LOAD_USER, loadUserSaga),\r\n}\r\n\r\nexport default rootSaga;\r\n"]},"metadata":{},"sourceType":"module"}