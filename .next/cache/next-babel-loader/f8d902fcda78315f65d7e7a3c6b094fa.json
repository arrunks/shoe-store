{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-projects\\\\shoe-store\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ProductsList from '../components/ProductsList';\nimport { connect } from 'react-redux';\nimport { loadProducts } from '..redux/actions';\n\nclass Index extends React.Component {\n  static async getInitialProps(props) {\n    const {\n      store,\n      isServer\n    } = props.ctx;\n    store.dispatch(loadProducts());\n    return {\n      isServer\n    };\n  }\n\n  componentDidMount() {//this.props.dispatch(startClock())\n  }\n\n  render() {\n    const {\n      products\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 4\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, \"List\"), __jsx(ProductsList, {\n      products: products,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => state)(Index); // export async function getServerSideProps(context) {\n// \tconst { jwt } = cookies(context);\n// \tconst res = await fetch('http://localhost:1337/products');\n// \tconst products = await res.json();\n// \tlet user = null;\n// \tif (jwt) {\n// \t\tconst res = await fetch('http://localhost:1337/users/me/', {\n// \t\t\tmethod: 'GET',\n// \t\t\theaders: {\n// \t\t\t\tAuthorization: `Bearer ${jwt}`,\n// \t\t\t},\n// \t\t});\n// \t\tuser = await res.json();\n// \t}\n// \treturn {\n// \t\tprops: {\n// \t\t\tproducts,\n// \t\t\tuser,\n// \t\t}, // will be passed to the page component as props\n// \t};\n// }","map":{"version":3,"sources":["C:/my-projects/shoe-store/pages/index.js"],"names":["ProductsList","connect","loadProducts","Index","React","Component","getInitialProps","props","store","isServer","ctx","dispatch","componentDidMount","render","products","state"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AACnC,eAAaC,eAAb,CAA6BC,KAA7B,EAAoC;AACnC,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBF,KAAK,CAACG,GAAlC;AAEAF,IAAAA,KAAK,CAACG,QAAN,CAAeT,YAAY,EAA3B;AAEA,WAAO;AAAEO,MAAAA;AAAF,KAAP;AACA;;AAEDG,EAAAA,iBAAiB,GAAG,CACnB;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEC,MAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAMA;;AArBkC;;AAwBpC,eAAeb,OAAO,CAAEc,KAAD,IAAWA,KAAZ,CAAP,CAA0BZ,KAA1B,CAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ProductsList from '../components/ProductsList';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadProducts } from '..redux/actions';\r\n\r\nclass Index extends React.Component {\r\n\tstatic async getInitialProps(props) {\r\n\t\tconst { store, isServer } = props.ctx;\r\n\r\n\t\tstore.dispatch(loadProducts());\r\n\r\n\t\treturn { isServer };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//this.props.dispatch(startClock())\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { products } = this.state;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>List</h2>\r\n\t\t\t\t<ProductsList products={products} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect((state) => state)(Index);\r\n\r\n// export async function getServerSideProps(context) {\r\n// \tconst { jwt } = cookies(context);\r\n\r\n// \tconst res = await fetch('http://localhost:1337/products');\r\n// \tconst products = await res.json();\r\n// \tlet user = null;\r\n// \tif (jwt) {\r\n// \t\tconst res = await fetch('http://localhost:1337/users/me/', {\r\n// \t\t\tmethod: 'GET',\r\n// \t\t\theaders: {\r\n// \t\t\t\tAuthorization: `Bearer ${jwt}`,\r\n// \t\t\t},\r\n// \t\t});\r\n// \t\tuser = await res.json();\r\n// \t}\r\n\r\n// \treturn {\r\n// \t\tprops: {\r\n// \t\t\tproducts,\r\n// \t\t\tuser,\r\n// \t\t}, // will be passed to the page component as props\r\n// \t};\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}