{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\nimport cookies from 'next-cookies';\nexport default function createApolloClient(initialState) {\n  var ctx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // The `ctx` (NextPageContext) will only be present on the server.\n  // use it to extract auth headers (ctx.req) or similar.\n  var _cookies = cookies(ctx),\n      jwt = _cookies.jwt;\n\n  return new ApolloClient({\n    ssrMode: Boolean(ctx),\n    link: new HttpLink({\n      uri: \"\".concat(process.env.backendUrl, \"/graphql\"),\n      // Server URL (must be absolute)\n      credentials: 'same-origin',\n      // Additional fetch() options like `credentials` or `headers`\n      fetch: fetch,\n      headers: {\n        authorization: jwt ? \"Bearer \".concat(jwt) : ''\n      }\n    }),\n    cache: new InMemoryCache().restore(initialState)\n  });\n}","map":null,"metadata":{},"sourceType":"module"}