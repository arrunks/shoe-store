{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\my-projects\\\\shoe-store\\\\pages\\\\signin.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport qs from 'querystring';\n\nvar Signin = function Signin(props) {\n  _s();\n\n  var _useState = useState(),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var submitForm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var opts, res, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              opts = {\n                identifier: email,\n                password: password\n              };\n              _context.next = 4;\n              return fetch('http://localhost:1337/auth/local', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n                },\n                body: qs.stringify(opts)\n              });\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              response = _context.sent;\n              console.log(response);\n              localStorage.setItem('jwt', response.jwt);\n              localStorage.setItem('user', response.username);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitForm(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Form, {\n    onSubmit: submitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, __jsx(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, __jsx(Label, {\n    \"for\": \"Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \"Email\"), __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    placeholder: \"Enter Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  })), __jsx(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, __jsx(Label, {\n    \"for\": \"password1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"Password\"), __jsx(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password1\",\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    placeholder: \"Enter Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  })), __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, \"Submit\"));\n};\n\n_s(Signin, \"H4JEG1vuYHSLyhAaPi5fwUA6IIE=\");\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["C:/my-projects/shoe-store/pages/signin.js"],"names":["React","useState","Button","Form","FormGroup","Label","Input","FormText","qs","Signin","props","email","setEmail","password","setPassword","submitForm","e","preventDefault","opts","identifier","fetch","method","headers","body","stringify","res","json","response","console","log","localStorage","setItem","jwt","username","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,QAAhD,QAAgE,YAAhE;AACA,OAAOC,EAAP,MAAe,aAAf;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACCT,QAAQ,EADT;AAAA,MAClBU,KADkB;AAAA,MACXC,QADW;;AAAA,mBAEOX,QAAQ,EAFf;AAAA,MAElBY,QAFkB;AAAA,MAERC,WAFQ;;AAIzB,MAAMC,UAAU;AAAA,wEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBA,cAAAA,CAAC,CAACC,cAAF;AACMC,cAAAA,IAFY,GAEL;AACZC,gBAAAA,UAAU,EAAER,KADA;AAEZE,gBAAAA,QAAQ,EAARA;AAFY,eAFK;AAAA;AAAA,qBAMAO,KAAK,CAAC,kCAAD,EAAqC;AAC3DC,gBAAAA,MAAM,EAAE,MADmD;AAE3DC,gBAAAA,OAAO,EAAE;AACR,kCAAgB;AADR,iBAFkD;AAK3DC,gBAAAA,IAAI,EAAEf,EAAE,CAACgB,SAAH,CAAaN,IAAb;AALqD,eAArC,CANL;;AAAA;AAMZO,cAAAA,GANY;AAAA;AAAA,qBAaKA,GAAG,CAACC,IAAJ,EAbL;;AAAA;AAaZC,cAAAA,QAbY;AAclBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAG,cAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BJ,QAAQ,CAACK,GAArC;AACAF,cAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,QAAQ,CAACM,QAAtC;;AAhBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVlB,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAmBA,SACC,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD;AAAO,WAAI,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAEC,MAAC,KAAD;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,EAAE,EAAC,OAHJ;AAIC,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOJ,QAAQ,CAACI,CAAC,CAACkB,MAAF,CAASC,KAAV,CAAf;AAAA,KAJX;AAKC,IAAA,WAAW,EAAC,aALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,EAWC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD;AAAO,WAAI,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC,MAAC,KAAD;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,IAAI,EAAC,UAFN;AAGC,IAAA,EAAE,EAAC,WAHJ;AAIC,IAAA,QAAQ,EAAE,kBAACnB,CAAD;AAAA,aAAOF,WAAW,CAACE,CAAC,CAACkB,MAAF,CAASC,KAAV,CAAlB;AAAA,KAJX;AAKC,IAAA,WAAW,EAAC,gBALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAXD,EAqBC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBD,CADD;AAyBA,CAhDD;;GAAM1B,M;;KAAAA,M;AAkDN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport qs from 'querystring';\r\n\r\nconst Signin = (props) => {\r\n\tconst [email, setEmail] = useState();\r\n\tconst [password, setPassword] = useState();\r\n\r\n\tconst submitForm = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst opts = {\r\n\t\t\tidentifier: email,\r\n\t\t\tpassword,\r\n\t\t};\r\n\t\tconst res = await fetch('http://localhost:1337/auth/local', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n\t\t\t},\r\n\t\t\tbody: qs.stringify(opts),\r\n\t\t});\r\n\t\tconst response = await res.json();\r\n\t\tconsole.log(response);\r\n\t\tlocalStorage.setItem('jwt', response.jwt);\r\n\t\tlocalStorage.setItem('user', response.username);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={submitForm}>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for='Email'>Email</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tid='email'\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\tplaceholder='Enter Email'\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for='password1'>Password</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tid='password1'\r\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\tplaceholder='Enter Password'\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<Button>Submit</Button>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}