{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tmutation register($type: UserInput!) {\\n\\t\\tregister(input: $type) {\\n\\t\\t\\tjwt\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { useRouter } from 'next/router';\nimport NProgress from 'nprogress';\nimport withLayout from '../lib/withLayout';\nimport withAuth from '../lib/withAuth';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nvar CREATE_USER = gql(_templateObject());\n\nvar Signup = function Signup(props) {\n  var router = useRouter();\n\n  var _useState = useState(),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(),\n      passwordSecond = _useState3[0],\n      setPasswordSecond = _useState3[1];\n\n  var _useState4 = useState(),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useMutation = useMutation(CREATE_USER, {\n    onCompleted: function onCompleted(_ref) {\n      var register = _ref.register;\n      document.cookie = \"jwt=\".concat(register.jwt, \"; path=/\");\n      router.push('/');\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      register = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  if (loading) {\n    NProgress.start();\n  }\n\n  var onFormSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var opts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              opts = {\n                username: name,\n                email: email,\n                password: password\n              };\n              register({\n                variables: {\n                  type: _objectSpread({}, opts)\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFormSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"form-wrapper\"\n  }, __jsx(Form, {\n    onSubmit: onFormSubmit\n  }, __jsx(FormGroup, null, __jsx(Label, {\n    \"for\": \"name\"\n  }, \"Name\"), __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    placeholder: \"Enter Name\"\n  })), __jsx(FormGroup, null, __jsx(Label, {\n    \"for\": \"password1\"\n  }, \"Password\"), __jsx(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password1\",\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    placeholder: \"Enter Password\"\n  })), __jsx(FormGroup, null, __jsx(Label, {\n    \"for\": \"password2\"\n  }, \"Re-enter Password\"), __jsx(Input, {\n    type: \"password\",\n    name: \"password2\",\n    id: \"password2\",\n    onChange: function onChange(e) {\n      return setPasswordSecond(e.target.value);\n    },\n    placeholder: \"Enter Password Again\"\n  })), __jsx(FormGroup, null, __jsx(Label, {\n    \"for\": \"Email\"\n  }, \"Email\"), __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    placeholder: \"Enter Email\"\n  })), __jsx(Button, null, \"Submit\")));\n};\n\nexport default withAuth(withLayout(Signup), {\n  logoutRequired: true\n});","map":null,"metadata":{},"sourceType":"module"}