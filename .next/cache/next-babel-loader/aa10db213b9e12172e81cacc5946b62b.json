{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadProductSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadUserSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\n/* global fetch */\nimport { all, call, delay, put, take, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch';\nimport { actionTypes, loadUser, loadProducts } from './actions';\nes6promise.polyfill();\n\nfunction loadProductSaga() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadProductSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('http://localhost:1337/products');\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          _context.next = 9;\n          return put(loadProducts(data));\n\n        case 9:\n          _context.next = 13;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n}\n\nfunction loadUserSaga() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadUserSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return fetch('http://localhost:1337/users/me/');\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context2.sent;\n          _context2.next = 9;\n          return put(loadUser(data));\n\n        case 9:\n          _context2.next = 13;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 11]]);\n}\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeLatest(actionTypes.LOAD_PRODUCTS, loadProductSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["C:/my-projects/shoe-store/redux/saga.js"],"names":["loadProductSaga","loadUserSaga","rootSaga","all","call","delay","put","take","takeLatest","es6promise","actionTypes","loadUser","loadProducts","polyfill","fetch","res","json","data","LOAD_PRODUCTS"],"mappings":";;oDAUUA,e;qDAUAC,Y;qDAUAC,Q;;AA9BV;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,oBAAP;AAEA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,YAAhC,QAAoD,WAApD;AAEAH,UAAU,CAACI,QAAX;;AAEA,SAAUb,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMc,KAAK,CAAC,gCAAD,CAAX;;AAFd;AAEQC,UAAAA,GAFR;AAAA;AAGe,iBAAMA,GAAG,CAACC,IAAJ,EAAN;;AAHf;AAGQC,UAAAA,IAHR;AAAA;AAIE,iBAAMX,GAAG,CAACM,YAAY,CAACK,IAAD,CAAb,CAAT;;AAJF;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUhB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMa,KAAK,CAAC,iCAAD,CAAX;;AAFd;AAEQC,UAAAA,GAFR;AAAA;AAGe,iBAAMA,GAAG,CAACC,IAAJ,EAAN;;AAHf;AAGQC,UAAAA,IAHR;AAAA;AAIE,iBAAMX,GAAG,CAACK,QAAQ,CAACM,IAAD,CAAT,CAAT;;AAJF;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUf,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMC,GAAG,CAAC,CAACK,UAAU,CAACE,WAAW,CAACQ,aAAb,EAA4BlB,eAA5B,CAAX,CAAD,CAAT;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeE,QAAf","sourcesContent":["/* global fetch */\r\n\r\nimport { all, call, delay, put, take, takeLatest } from 'redux-saga/effects';\r\nimport es6promise from 'es6-promise';\r\nimport 'isomorphic-unfetch';\r\n\r\nimport { actionTypes, loadUser, loadProducts } from './actions';\r\n\r\nes6promise.polyfill();\r\n\r\nfunction* loadProductSaga() {\r\n\ttry {\r\n\t\tconst res = yield fetch('http://localhost:1337/products');\r\n\t\tconst data = yield res.json();\r\n\t\tyield put(loadProducts(data));\r\n\t} catch (err) {\r\n\t\t//yield put(failure(err))\r\n\t}\r\n}\r\n\r\nfunction* loadUserSaga() {\r\n\ttry {\r\n\t\tconst res = yield fetch('http://localhost:1337/users/me/');\r\n\t\tconst data = yield res.json();\r\n\t\tyield put(loadUser(data));\r\n\t} catch (err) {\r\n\t\t//yield put(failure(err))\r\n\t}\r\n}\r\n\r\nfunction* rootSaga() {\r\n\tyield all([takeLatest(actionTypes.LOAD_PRODUCTS, loadProductSaga)]);\r\n\t//takeLatest(actionTypes.LOAD_USER, loadUserSaga),\r\n}\r\n\r\nexport default rootSaga;\r\n"]},"metadata":{},"sourceType":"module"}