{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-projects\\\\shoe-store\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ProductsList from '../components/ProductsList';\nimport cookies from 'next-cookies';\nexport default (({\n  products\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }\n  }, \"List\"), __jsx(ProductsList, {\n    products: products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }\n  }));\n}); // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n// export async function getStaticProps(context) {\n// \t// Call an external API endpoint to get posts.\n// \t// You can use any data fetching library\n// \tconst res = await fetch('http://localhost:1337/products');\n// \tconst products = await res.json();\n// \t// By returning { props: posts }, the Blog component\n// \t// will receive `posts` as a prop at build time\n// \treturn {\n// \t\tprops: {\n// \t\t\tproducts,\n// \t\t},\n// \t};\n// }\n\nexport async function getServerSideProps(context) {\n  const {\n    jwt\n  } = cookies(context);\n  const res = await fetch('http://localhost:1337/products');\n  const products = await res.json();\n\n  if (jwt) {\n    const res = await fetch('http://localhost:1337/users/me/', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwt}`\n      }\n    });\n    const response = await res.json();\n  }\n\n  return {\n    props: {\n      products,\n      user: response || null\n    } // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["C:/my-projects/shoe-store/pages/index.js"],"names":["ProductsList","cookies","products","getServerSideProps","context","jwt","res","fetch","json","method","headers","Authorization","response","props","user"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChC,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEC,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAMA,CAPD,E,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAUJ,OAAO,CAACG,OAAD,CAAvB;AAEA,QAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAAvB;AACA,QAAML,QAAQ,GAAG,MAAMI,GAAG,CAACE,IAAJ,EAAvB;;AAEA,MAAIH,GAAJ,EAAS;AACR,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC1DE,MAAAA,MAAM,EAAE,KADkD;AAE1DC,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAG,UAASN,GAAI;AADrB;AAFiD,KAApC,CAAvB;AAMA,UAAMO,QAAQ,GAAG,MAAMN,GAAG,CAACE,IAAJ,EAAvB;AACA;;AAED,SAAO;AACNK,IAAAA,KAAK,EAAE;AACNX,MAAAA,QADM;AAENY,MAAAA,IAAI,EAAEF,QAAQ,IAAI;AAFZ,KADD,CAIH;;AAJG,GAAP;AAMA","sourcesContent":["import ProductsList from '../components/ProductsList';\r\nimport cookies from 'next-cookies';\r\n\r\nexport default ({ products }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>List</h2>\r\n\t\t\t<ProductsList products={products} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries. See the \"Technical details\" section.\r\n// export async function getStaticProps(context) {\r\n// \t// Call an external API endpoint to get posts.\r\n// \t// You can use any data fetching library\r\n// \tconst res = await fetch('http://localhost:1337/products');\r\n// \tconst products = await res.json();\r\n// \t// By returning { props: posts }, the Blog component\r\n// \t// will receive `posts` as a prop at build time\r\n// \treturn {\r\n// \t\tprops: {\r\n// \t\t\tproducts,\r\n// \t\t},\r\n// \t};\r\n// }\r\n\r\nexport async function getServerSideProps(context) {\r\n\tconst { jwt } = cookies(context);\r\n\r\n\tconst res = await fetch('http://localhost:1337/products');\r\n\tconst products = await res.json();\r\n\r\n\tif (jwt) {\r\n\t\tconst res = await fetch('http://localhost:1337/users/me/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${jwt}`,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconst response = await res.json();\r\n\t}\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tproducts,\r\n\t\t\tuser: response || null,\r\n\t\t}, // will be passed to the page component as props\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}