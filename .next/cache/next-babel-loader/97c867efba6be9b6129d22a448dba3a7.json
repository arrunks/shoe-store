{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-projects\\\\shoe-store\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { useRouter } from 'next/router';\nimport qs from 'querystring';\nimport withLayout from '../lib/withLayout';\nimport withAuth from '../lib/withAuth';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nconst CREATE_USER = gql`\n\tmutation createUser($type: createUserInput!) {\n\t\tcreateUser(input: $type) {\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Signup = props => {\n  const router = useRouter();\n  const {\n    0: name,\n    1: setName\n  } = useState();\n  const {\n    0: password,\n    1: setPassword\n  } = useState();\n  const {\n    0: passwordSecond,\n    1: setPasswordSecond\n  } = useState();\n  const {\n    0: email,\n    1: setEmail\n  } = useState();\n  const [createUser, {\n    data\n  }] = useMutation(CREATE_USER, {\n    onCompleted() {\n      router.push('/');\n    }\n\n  });\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n    const opts = {\n      username: name,\n      email,\n      password\n    };\n    createUser({\n      variables: {\n        type: {\n          data: _objectSpread({}, opts)\n        }\n      }\n    }); // const res = await fetch('http://localhost:1337/auth/local/register', {\n    // \tmethod: 'POST',\n    // \theaders: {\n    // \t\t'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n    // \t},\n    // \tbody: qs.stringify(opts),\n    // });\n    // const response = await res.json();\n  };\n\n  return __jsx(Form, {\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, __jsx(Label, {\n    for: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Name\"), __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: e => setName(e.target.value),\n    placeholder: \"Enter Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  })), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }, __jsx(Label, {\n    for: \"password1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, \"Password\"), __jsx(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password1\",\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Enter Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  })), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }, __jsx(Label, {\n    for: \"password2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \"Re-enter Password\"), __jsx(Input, {\n    type: \"password\",\n    name: \"password2\",\n    id: \"password2\",\n    onChange: e => setPasswordSecond(e.target.value),\n    placeholder: \"Enter Password Again\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  })), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }, __jsx(Label, {\n    for: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, \"Email\"), __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Enter Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  })), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, \"Submit\"));\n};\n\nexport default withAuth(withLayout(Signup), {\n  logoutRequired: true\n});","map":{"version":3,"sources":["C:/my-projects/shoe-store/pages/signup.js"],"names":["React","useState","Button","Form","FormGroup","Label","Input","FormText","useRouter","qs","withLayout","withAuth","gql","useMutation","CREATE_USER","Signup","props","router","name","setName","password","setPassword","passwordSecond","setPasswordSecond","email","setEmail","createUser","data","onCompleted","push","onFormSubmit","e","preventDefault","opts","username","variables","type","target","value","logoutRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { useRouter } from 'next/router';\r\nimport qs from 'querystring';\r\n\r\nimport withLayout from '../lib/withLayout';\r\nimport withAuth from '../lib/withAuth';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nconst CREATE_USER = gql`\r\n\tmutation createUser($type: createUserInput!) {\r\n\t\tcreateUser(input: $type) {\r\n\t\t\tuser {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Signup = (props) => {\r\n\tconst router = useRouter();\r\n\tconst [name, setName] = useState();\r\n\tconst [password, setPassword] = useState();\r\n\tconst [passwordSecond, setPasswordSecond] = useState();\r\n\tconst [email, setEmail] = useState();\r\n\r\n\tconst [createUser, { data }] = useMutation(CREATE_USER, {\r\n\t\tonCompleted() {\r\n\t\t\trouter.push('/');\r\n\t\t},\r\n\t});\r\n\r\n\tconst onFormSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst opts = {\r\n\t\t\tusername: name,\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t};\r\n\t\tcreateUser({ variables: { type: { data: { ...opts } } } });\r\n\r\n\t\t// const res = await fetch('http://localhost:1337/auth/local/register', {\r\n\t\t// \tmethod: 'POST',\r\n\t\t// \theaders: {\r\n\t\t// \t\t'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n\t\t// \t},\r\n\t\t// \tbody: qs.stringify(opts),\r\n\t\t// });\r\n\t\t// const response = await res.json();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={onFormSubmit}>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for='name'>Name</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='name'\r\n\t\t\t\t\tid='name'\r\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\tplaceholder='Enter Name'\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for='password1'>Password</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tid='password1'\r\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\tplaceholder='Enter Password'\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for='password2'>Re-enter Password</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='password2'\r\n\t\t\t\t\tid='password2'\r\n\t\t\t\t\tonChange={(e) => setPasswordSecond(e.target.value)}\r\n\t\t\t\t\tplaceholder='Enter Password Again'\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for='Email'>Email</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tid='email'\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\tplaceholder='Enter Email'\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<Button>Submit</Button>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default withAuth(withLayout(Signup), { logoutRequired: true });\r\n"]},"metadata":{},"sourceType":"module"}