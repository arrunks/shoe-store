{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\my-projects\\\\shoe-store\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ProductsList from '../components/ProductsList';\nexport var __N_SSG = true;\nexport default (function (_ref) {\n  var products = _ref.products;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 4\n    }\n  }, \"List\"), __jsx(ProductsList, {\n    products: products,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }\n  }));\n}); // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.","map":{"version":3,"sources":["C:/my-projects/shoe-store/pages/index.js"],"names":["ProductsList","products"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,4BAAzB;;AAEA,gBAAe,gBAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChC,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEC,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAMA,CAPD,E,CASA;AACA;AACA","sourcesContent":["import ProductsList from '../components/ProductsList';\r\n\r\nexport default ({ products }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>List</h2>\r\n\t\t\t<ProductsList products={products} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries. See the \"Technical details\" section.\r\nexport async function getStaticProps() {\r\n\tconsole.log('get static props');\r\n\t// Call an external API endpoint to get posts.\r\n\t// You can use any data fetching library\r\n\tconst res = await fetch('http://localhost:1337/products');\r\n\tconst products = await res.json();\r\n\tconsole.log(products);\r\n\t// By returning { props: posts }, the Blog component\r\n\t// will receive `posts` as a prop at build time\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tproducts,\r\n\t\t},\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}