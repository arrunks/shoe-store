{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport cookies from 'next-cookies';\nlet globalUser = null;\n\nfunction withAuth(BaseComponent, {\n  loginRequired = true,\n  logoutRequired = false\n} = {}) {\n  class App extends React.Component {\n    componentDidMount() {\n      const {\n        user,\n        isFromServer\n      } = this.props;\n\n      if (isFromServer) {\n        globalUser = user;\n      } // If login is required and not logged in, redirect to \"/login\" page\n\n\n      if (loginRequired && !logoutRequired && !user) {\n        Router.push('/signin');\n        return;\n      } // If logout is required and user logged in, redirect to \"/\" page\n\n\n      if (logoutRequired && user) {\n        Router.push('/');\n      }\n    }\n\n    static async getInitialProps(ctx) {\n      const isFromServer = !!ctx.req;\n      let user = globalUser;\n      const {\n        jwt\n      } = cookies(ctx);\n\n      if (jwt) {\n        const res = await fetch(`${process.env.backendUrl}/users/me/`, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${jwt}`\n          }\n        });\n        user = await res.json();\n      }\n\n      if (isFromServer && user) {\n        // Convert \"_id\"(ObjectID from MongoDB) object to string\n        user._id = user._id.toString();\n      }\n\n      const props = {\n        user,\n        isFromServer\n      }; // Call child component's \"getInitialProps\", if it is defined\n\n      if (BaseComponent.getInitialProps) {\n        Object.assign(props, (await BaseComponent.getInitialProps(ctx)) || {});\n      }\n\n      return props;\n    }\n\n    render() {\n      const {\n        user\n      } = this.props;\n\n      if (loginRequired && !logoutRequired && !user) {\n        return null;\n      }\n\n      if (logoutRequired && user) {\n        return null;\n      }\n\n      return __jsx(BaseComponent, this.props);\n    }\n\n  }\n\n  _defineProperty(App, \"defaultProps\", {\n    user: null\n  });\n\n  return App;\n}\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}