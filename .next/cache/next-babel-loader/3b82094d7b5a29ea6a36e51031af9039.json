{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\nexport default function createApolloClient(initialState, ctx) {\n  // The `ctx` (NextPageContext) will only be present on the server.\n  // use it to extract auth headers (ctx.req) or similar.\n  return new ApolloClient({\n    ssrMode: Boolean(ctx),\n    link: new HttpLink({\n      uri: 'http://localhost:1337/graphql',\n      // Server URL (must be absolute)\n      credentials: 'same-origin',\n      // Additional fetch() options like `credentials` or `headers`\n      fetch\n    }),\n    cache: new InMemoryCache().restore(initialState)\n  });\n}","map":{"version":3,"sources":["C:/my-projects/shoe-store/apolloClient.js"],"names":["ApolloClient","InMemoryCache","HttpLink","fetch","createApolloClient","initialState","ctx","ssrMode","Boolean","link","uri","credentials","cache","restore"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,GAA1C,EAA+C;AAC7D;AACA;AACA,SAAO,IAAIN,YAAJ,CAAiB;AACvBO,IAAAA,OAAO,EAAEC,OAAO,CAACF,GAAD,CADO;AAEvBG,IAAAA,IAAI,EAAE,IAAIP,QAAJ,CAAa;AAClBQ,MAAAA,GAAG,EAAE,+BADa;AACoB;AACtCC,MAAAA,WAAW,EAAE,aAFK;AAEU;AAC5BR,MAAAA;AAHkB,KAAb,CAFiB;AAOvBS,IAAAA,KAAK,EAAE,IAAIX,aAAJ,GAAoBY,OAApB,CAA4BR,YAA5B;AAPgB,GAAjB,CAAP;AASA","sourcesContent":["import { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nexport default function createApolloClient(initialState, ctx) {\r\n\t// The `ctx` (NextPageContext) will only be present on the server.\r\n\t// use it to extract auth headers (ctx.req) or similar.\r\n\treturn new ApolloClient({\r\n\t\tssrMode: Boolean(ctx),\r\n\t\tlink: new HttpLink({\r\n\t\t\turi: 'http://localhost:1337/graphql', // Server URL (must be absolute)\r\n\t\t\tcredentials: 'same-origin', // Additional fetch() options like `credentials` or `headers`\r\n\t\t\tfetch,\r\n\t\t}),\r\n\t\tcache: new InMemoryCache().restore(initialState),\r\n\t});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}