{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-projects\\\\shoe-store\\\\lib\\\\withAuth.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\nimport cookies from 'next-cookies';\nlet globalUser = null;\nimport { AppContext } from './AppContext';\n\nfunction withAuth(BaseComponent, {\n  loginRequired = true,\n  logoutRequired = false\n} = {}) {\n  class App extends React.Component {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"state\", {\n        user: null,\n        cart: null\n      });\n\n      _defineProperty(this, \"updateValue\", (key, val) => {\n        this.setState({\n          [key]: val\n        });\n      });\n    }\n\n    componentDidMount() {\n      const {\n        user,\n        isFromServer\n      } = this.props;\n\n      if (isFromServer) {\n        globalUser = user;\n      } // If login is required and not logged in, redirect to \"/login\" page\n\n\n      if (loginRequired && !logoutRequired && !user) {\n        Router.push('/signin');\n        return;\n      } // If logout is required and user logged in, redirect to \"/\" page\n\n\n      if (logoutRequired && user) {\n        Router.push('/');\n      }\n    }\n\n    static async getInitialProps(ctx) {\n      const isFromServer = !!ctx.req;\n      let user = globalUser;\n      const {\n        jwt\n      } = cookies(ctx);\n\n      if (jwt) {\n        const res = await fetch('http://localhost:1337/users/me/', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${jwt}`\n          }\n        });\n        user = await res.json();\n      }\n\n      if (isFromServer && user) {\n        // Convert \"_id\"(ObjectID from MongoDB) object to string\n        user._id = user._id.toString();\n      }\n\n      const props = {\n        user,\n        isFromServer\n      }; // Call child component's \"getInitialProps\", if it is defined\n\n      if (BaseComponent.getInitialProps) {\n        Object.assign(props, (await BaseComponent.getInitialProps(ctx)) || {});\n      }\n\n      return props;\n    }\n\n    render() {\n      const {\n        user\n      } = this.props;\n\n      if (loginRequired && !logoutRequired && !user) {\n        return null;\n      }\n\n      if (logoutRequired && user) {\n        return null;\n      }\n\n      return __jsx(AppContext.Provider, {\n        value: {\n          globalStore: this.state,\n          updateValue: this.updateValue\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }\n      }, __jsx(BaseComponent, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }\n      })));\n    }\n\n  }\n\n  _defineProperty(App, \"propTypes\", {\n    user: PropTypes.shape({\n      username: PropTypes.string,\n      email: PropTypes.string.isRequired\n    }),\n    isFromServer: PropTypes.bool.isRequired\n  });\n\n  _defineProperty(App, \"defaultProps\", {\n    user: null\n  });\n\n  return App;\n}\n\nexport default withAuth;","map":{"version":3,"sources":["C:/my-projects/shoe-store/lib/withAuth.js"],"names":["React","PropTypes","Router","cookies","globalUser","AppContext","withAuth","BaseComponent","loginRequired","logoutRequired","App","Component","user","cart","key","val","setState","componentDidMount","isFromServer","props","push","getInitialProps","ctx","req","jwt","res","fetch","method","headers","Authorization","json","_id","toString","Object","assign","render","globalStore","state","updateValue","shape","username","string","email","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Router from 'next/router';\r\nimport cookies from 'next-cookies';\r\n\r\nlet globalUser = null;\r\n\r\nimport { AppContext } from './AppContext';\r\n\r\nfunction withAuth(BaseComponent, { loginRequired = true, logoutRequired = false } = {}) {\r\n\tclass App extends React.Component {\r\n\t\tstatic propTypes = {\r\n\t\t\tuser: PropTypes.shape({\r\n\t\t\t\tusername: PropTypes.string,\r\n\t\t\t\temail: PropTypes.string.isRequired,\r\n\t\t\t}),\r\n\t\t\tisFromServer: PropTypes.bool.isRequired,\r\n\t\t};\r\n\r\n\t\tstatic defaultProps = {\r\n\t\t\tuser: null,\r\n\t\t};\r\n\r\n\t\tstate = {\r\n\t\t\tuser: null,\r\n\t\t\tcart: null,\r\n\t\t};\r\n\r\n\t\tupdateValue = (key, val) => {\r\n\t\t\tthis.setState({ [key]: val });\r\n\t\t};\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\tconst { user, isFromServer } = this.props;\r\n\r\n\t\t\tif (isFromServer) {\r\n\t\t\t\tglobalUser = user;\r\n\t\t\t}\r\n\r\n\t\t\t// If login is required and not logged in, redirect to \"/login\" page\r\n\t\t\tif (loginRequired && !logoutRequired && !user) {\r\n\t\t\t\tRouter.push('/signin');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If logout is required and user logged in, redirect to \"/\" page\r\n\t\t\tif (logoutRequired && user) {\r\n\t\t\t\tRouter.push('/');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic async getInitialProps(ctx) {\r\n\t\t\tconst isFromServer = !!ctx.req;\r\n\r\n\t\t\tlet user = globalUser;\r\n\r\n\t\t\tconst { jwt } = cookies(ctx);\r\n\t\t\tif (jwt) {\r\n\t\t\t\tconst res = await fetch('http://localhost:1337/users/me/', {\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${jwt}`,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tuser = await res.json();\r\n\t\t\t}\r\n\r\n\t\t\tif (isFromServer && user) {\r\n\t\t\t\t// Convert \"_id\"(ObjectID from MongoDB) object to string\r\n\t\t\t\tuser._id = user._id.toString();\r\n\t\t\t}\r\n\r\n\t\t\tconst props = { user, isFromServer };\r\n\r\n\t\t\t// Call child component's \"getInitialProps\", if it is defined\r\n\t\t\tif (BaseComponent.getInitialProps) {\r\n\t\t\t\tObject.assign(props, (await BaseComponent.getInitialProps(ctx)) || {});\r\n\t\t\t}\r\n\r\n\t\t\treturn props;\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t\tconst { user } = this.props;\r\n\r\n\t\t\tif (loginRequired && !logoutRequired && !user) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (logoutRequired && user) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<AppContext.Provider value={{ globalStore: this.state, updateValue: this.updateValue }}>\r\n\t\t\t\t\t<BaseComponent {...this.props} />\r\n\t\t\t\t</AppContext.Provider>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn App;\r\n}\r\n\r\nexport default withAuth;\r\n"]},"metadata":{},"sourceType":"module"}